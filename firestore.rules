rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is logged in
    function isAuthenticated() {
      return request.auth != null;
    }

    // Subject-specific collections (biochemistry, etc.)
    match /{subject}/{questionId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.token.admin == true;
    }

    // Questions collection
    match /questions/{questionId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.token.admin == true;
    }

    // User completions collection
    match /userCompletions/{completionId} {
      allow read: if isAuthenticated() && 
        (request.auth.uid == resource.data.userId || request.auth.token.admin == true);
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.userId;
      allow update, delete: if isAuthenticated() && 
        request.auth.uid == resource.data.userId;
    }

    // User data
    match /users/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      allow write: if isAuthenticated() && request.auth.uid == userId;
      
      // Nested collections for user data
      match /attempts/{attemptId} {
        allow read: if isAuthenticated() && request.auth.uid == userId;
        allow write: if isAuthenticated() && request.auth.uid == userId;
      }
      
      match /analytics/{analyticsId} {
        allow read: if isAuthenticated() && request.auth.uid == userId;
        allow write: if isAuthenticated() && request.auth.uid == userId;
      }
    }

    // Deny access to all other collections by default
    match /{document=**} {
      allow read: if false;
      allow write: if false;
    }
  }
}